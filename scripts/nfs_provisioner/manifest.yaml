apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nfs-client-provisioner
    owner: webapp-control-plane
  name: nfs-client-provisioner
  namespace: webapp
spec:
  selector:
    matchLabels:
      app: nfs-client-provisioner
  template:
    metadata:
      labels:
        app: nfs-client-provisioner
        owner: webapp-control-plane
    spec:
      containers:
      - env:
        - name: PROVISIONER_NAME
          value: webapp.io/ifs
        - name: NFS_SERVER
          value: $NFS_SERVER
        - name: NFS_PATH
          value: $NFS_PATH
        image: docker.io/webapp/nfs-subdir-external-provisioner:v4.0.0
        imagePullPolicy: IfNotPresent
        name: nfs-client-provisioner
        resources:
          limits:
            cpu: 200m
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
        - mountPath: /persistentvolumes
          name: nfs-client-root
      enableServiceLinks: false
      securityContext: {}
      serviceAccount: nfs-client-provisioner
      serviceAccountName: nfs-client-provisioner
      volumes:
      - name: nfs-client-root
        nfs:
          path: $NFS_PATH
          server: $NFS_SERVER
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  annotations:
    storageclass.kubernetes.io/is-default-class: "true"
  labels:
    owner: webapp-control-plane
  name: webapp-nfs-storage
provisioner: webapp.io/ifs
reclaimPolicy: Retain
volumeBindingMode: Immediate
---
apiVersion: v1
imagePullSecrets:
- name: webapp-infra-registry
kind: ServiceAccount
metadata:
  labels:
    owner: webapp-control-plane
  name: nfs-client-provisioner
  namespace: webapp
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    owner: webapp-control-plane
  name: leader-locking-nfs-client-provisioner
  namespace: webapp
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    owner: webapp-control-plane
  name: leader-locking-nfs-client-provisioner
  namespace: webapp
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: leader-locking-nfs-client-provisioner
subjects:
- kind: ServiceAccount
  name: nfs-client-provisioner
  namespace: webapp
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    owner: webapp-control-plane
  name: nfs-client-provisioner-runner
rules:
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - watch
  - create
  - delete
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - storage.k8s.io
  resources:
  - storageclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - update
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    owner: webapp-control-plane
  name: run-nfs-client-provisioner
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nfs-client-provisioner-runner
subjects:
- kind: ServiceAccount
  name: nfs-client-provisioner
